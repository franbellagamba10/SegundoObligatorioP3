
====================================================================================================================
|	REFACTOR DE ADO.NET A ENTITY FRAMEWORK
|
|	1-	DATA ANNOTATIONS de clases que manejamos en primero obligatorio ---> Borramos Validaciones de clase (IValidate y metodos) y reemplazamos por data annotations
|		- Usuario	 -> Contraseña -> Usar REGEX?
|		- Planta	 -> No estabamos controlando la ficha como obligatoria, ahora se le puso [Required] pero revisar si es necesario
|					 -> UsuarioAutor no se controla (tiene sentido porque se aplica cuando se crea, pero revisar igual por las dudas)
|					 -> Precio -> testear bien rango de precio, estamos usando Double.MaxValue para un valor que es Decimal, puede darnos problemas
|		- TipoPlanta -> Revisar que admita letras ñ y Ñ, tambien que no permita espacios en blanco y blanks (ASCII 32)
|		- TipoIluminacion -> Revisar cantidad minima, uso rango de 0 a infinito positivo, ver que pasa con valores <= 0
|!!!!   - Compra -> No existe un DataAnnotation para controlar la fecha, necesitariamos que no se puedan poner fechas a futuro. Se puede hacer uno personalizado heredando de clase ValidationAttribute
|!!!!	- Item -> Revisar Precio. [Range(0,(double)decimal.MaxValue)] -> el tipo de dato es decimal, pero necesita ser casteado porque no puedo hacer decimal.MaxValue
|	
|   2- Implementar clases que no manejamos en primer obligatorio con sus data annotations
|
|	3- Refactorizar metodos de repositorios para implementar Entity Framework
|
|	4- Crear migracion una vez (1) este terminado
|
|	5-  FindByName() de TipoIluminacion devuelve un objeto unico. No deberia devolver un Enumerable? Pueden haber varias coincidencias porque nombre no es Key
|		Todos los FindByName() Validar en el INPUT que la cadena enviada para el metodo no sea vacia
|
|	6- Revisar ExisteString() de todos los repositorios, algunos lo implementan pero no se si los necesitan. Lo necesitamos?
|
|	7- Comprobar si en RepoFichas hay que agregarle get y set a inyeccion de dependencias de los otros repos
|
|	8- USUARIOS - CREATE --> Validar que el email no exista, no existe un Data Annotation que valide UNIQUE sin ser PK. Hay que hacer por metodo
|
|	9- Idea: hacer un objeto Respuesta que tenga codigo y descripcion para devolver mensajes especificos sobre resultados.
		Esto llevaria un enumerable de descripcion y codigos de respuesta. Llevaria tiempo pero es buena idea para manejar
		errores y excepciones
|
|	10 -REVISAR REPOSITORIOS --> que este todo el crud apuntando a las tablas correctas en todos los metodos, nombres de variables
					y si hay que validar algo que no cubren las DataAnnotations
|
|	11 - Falta todo el repo de Compra !!
|
|
|
|
|
|
|
|
|
|
|
|
|
|
|
|