// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(ViveroContext))]
    [Migration("20220621192314_ModelFinal")]
    partial class ModelFinal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Entidades.Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Compras");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Compra");
                });

            modelBuilder.Entity("Dominio.Entidades.EntidadesAuxiliares.VariablesGlobales", b =>
                {
                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ImpuestoImportacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaArancelaria")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("VariablesGlobales");
                });

            modelBuilder.Entity("Dominio.Entidades.Ficha", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("frecuenciaRiegoId")
                        .HasColumnType("int");

                    b.Property<decimal>("temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tipoIluminacionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("frecuenciaRiegoId");

                    b.HasIndex("tipoIluminacionId");

                    b.ToTable("Fichas");
                });

            modelBuilder.Entity("Dominio.Entidades.FrecuenciaRiego", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("tiempo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("FrecuenciasRiego");
                });

            modelBuilder.Entity("Dominio.Entidades.Item", b =>
                {
                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlantaId", "CompraId");

                    b.HasIndex("CompraId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Dominio.Entidades.Planta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FichaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPlantaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("alturaMaxima")
                        .HasColumnType("int");

                    b.Property<int>("ambiente")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombresVulgares")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("FichaId");

                    b.HasIndex("TipoPlantaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("Dominio.Entidades.TipoIluminacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("iluminacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("TiposIluminacion");
                });

            modelBuilder.Entity("Dominio.Entidades.TipoPlanta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TiposPlanta");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entidades.CompraImportacion", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Compra");

                    b.Property<bool>("esSudamericana")
                        .HasColumnType("bit");

                    b.Property<decimal>("impuestoImportacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("medidasSanitarias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tasaArancelaria")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("CompraImportacion");
                });

            modelBuilder.Entity("Dominio.Entidades.CompraPlaza", b =>
                {
                    b.HasBaseType("Dominio.Entidades.Compra");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("cobroFlete")
                        .HasColumnType("bit");

                    b.Property<decimal>("costoEnvio")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("CompraPlaza");
                });

            modelBuilder.Entity("Dominio.Entidades.Ficha", b =>
                {
                    b.HasOne("Dominio.Entidades.FrecuenciaRiego", "frecuenciaRiego")
                        .WithMany("Fichas")
                        .HasForeignKey("frecuenciaRiegoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.TipoIluminacion", "tipoIluminacion")
                        .WithMany("Fichas")
                        .HasForeignKey("tipoIluminacionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.Item", b =>
                {
                    b.HasOne("Dominio.Entidades.Compra", null)
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Planta", "Planta")
                        .WithMany("Items")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entidades.Planta", b =>
                {
                    b.HasOne("Dominio.Entidades.Ficha", "Ficha")
                        .WithMany("Plantas")
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.TipoPlanta", "TipoPlanta")
                        .WithMany("Plantas")
                        .HasForeignKey("TipoPlantaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("PlantasIngresadas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
